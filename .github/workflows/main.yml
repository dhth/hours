name: main

on:
  push:
    branches:
      - 'main'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      code: ${{ steps.filter.outputs.code }}
      deps: ${{ steps.filter.outputs.deps }}
      release: ${{ steps.filter.outputs.release }}
      workflows: ${{ steps.filter.outputs.workflows }}
      yml: ${{ steps.filter.outputs.yml }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            code:
              - "cmd/**"
              - "internal/**"
              - "tests/**"
              - "**/*.go"
              - "go.*"
              - ".golangci.yml"
              - "main.go"
              - ".github/actions/**"
              - ".github/workflows/main.yml"
            deps:
              - "go.mod"
              - "go.sum"
              - ".github/workflows/main.yml"
            release:
              - ".goreleaser.yml"
              - ".github/workflows/main.yml"
            workflows:
              - ".github/workflows/**.yml"
            yml:
              - "**.yml"
              - "**.yaml"

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4

  build:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: go build
        run: go build -v ./...
      - name: run hours
        run: |
          go build .
          ./hours --dbpath=/var/tmp/throwaway-1.db report 3d -p
          ./hours --dbpath=/var/tmp/throwaway-2.db gen -y
          ./hours --dbpath=/var/tmp/throwaway-2.db report 3d -p
          ./hours --dbpath=/var/tmp/throwaway-2.db log 3d -p
          ./hours --dbpath=/var/tmp/throwaway-2.db stats 3d -p

  test:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: go test
        run: go test -v ./...

  live-tests:
    needs: [changes, test]
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: go install
        run: go install .
      - name: Run live tests
        run: |
          cd tests
          ./test.sh

  lint-yaml:
    needs: changes
    if: ${{ needs.changes.outputs.yml == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dhth/composite-actions/.github/actions/lint-yaml@main

  lint-workflows:
    needs: changes
    if: ${{ needs.changes.outputs.workflows == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dhth/composite-actions/.github/actions/lint-actions@main

  release-check:
    needs: changes
    if: ${{ needs.changes.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Release check
        uses: goreleaser/goreleaser-action@v6
        with:
          version: 'v2.9.0'
          args: check

  back-compat:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2
      - run: git checkout HEAD~1
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: build last commit
        run: |
          go build -o hours_prev
          cp hours_prev /var/tmp
          rm hours_prev
      - run: git checkout main
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: build head
        run: |
          go build -o hours_head
          cp hours_head /var/tmp
          rm hours_head
      - name: Run last version
        run: |
          /var/tmp/hours_prev --dbpath=/var/tmp/throwaway-empty.db report 3d -p
          /var/tmp/hours_prev --dbpath=/var/tmp/throwaway-with-data.db gen -y
      - name: Run current version
        run: |
          echo "empty"
          /var/tmp/hours_head --dbpath=/var/tmp/throwaway-empty.db report 3d -p
          /var/tmp/hours_head --dbpath=/var/tmp/throwaway-empty.db log 3d -p
          /var/tmp/hours_head --dbpath=/var/tmp/throwaway-empty.db stats 3d -p
          echo "with data"
          /var/tmp/hours_head --dbpath=/var/tmp/throwaway-with-data.db report 3d -p
          /var/tmp/hours_head --dbpath=/var/tmp/throwaway-with-data.db log 3d -p
          /var/tmp/hours_head --dbpath=/var/tmp/throwaway-with-data.db stats 3d -p

  vulncheck:
    needs: changes
    if: ${{ needs.changes.outputs.deps == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: govulncheck
        run: govulncheck ./...
